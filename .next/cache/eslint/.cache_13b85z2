[{"C:\\Users\\MrLumus\\Documents\\GitHub\\ml-games-io-finally\\pages\\games\\[slug]\\[id].js":"1","C:\\Users\\MrLumus\\Documents\\GitHub\\ml-games-io-finally\\pages\\index.js":"2","C:\\Users\\MrLumus\\Documents\\GitHub\\ml-games-io-finally\\pages\\_app.js":"3","C:\\Users\\MrLumus\\Documents\\GitHub\\ml-games-io-finally\\components\\currentGamePage\\CurrentGame.jsx":"4","C:\\Users\\MrLumus\\Documents\\GitHub\\ml-games-io-finally\\components\\currentGamePage\\Slider.jsx":"5","C:\\Users\\MrLumus\\Documents\\GitHub\\ml-games-io-finally\\components\\gamesPage\\GamesGrid\\Game\\Game.jsx":"6","C:\\Users\\MrLumus\\Documents\\GitHub\\ml-games-io-finally\\components\\gamesPage\\GamesGrid\\GamesGrid.jsx":"7","C:\\Users\\MrLumus\\Documents\\GitHub\\ml-games-io-finally\\components\\gamesPage\\SearchButton\\SearchButton.jsx":"8","C:\\Users\\MrLumus\\Documents\\GitHub\\ml-games-io-finally\\components\\gamesPage\\SearchInput\\SearchInput.jsx":"9","C:\\Users\\MrLumus\\Documents\\GitHub\\ml-games-io-finally\\components\\gamesPage\\SelectList\\SelectList.jsx":"10","C:\\Users\\MrLumus\\Documents\\GitHub\\ml-games-io-finally\\components\\gamesPage\\SelectListFilter\\SelectListFilter.jsx":"11","C:\\Users\\MrLumus\\Documents\\GitHub\\ml-games-io-finally\\components\\global\\Container\\Container.jsx":"12","C:\\Users\\MrLumus\\Documents\\GitHub\\ml-games-io-finally\\components\\global\\Loader\\Loader.jsx":"13"},{"size":167,"mtime":1661075336034,"results":"14","hashOfConfig":"15"},{"size":5039,"mtime":1661075336034,"results":"16","hashOfConfig":"15"},{"size":1065,"mtime":1661075336034,"results":"17","hashOfConfig":"15"},{"size":9598,"mtime":1661076300207,"results":"18","hashOfConfig":"15"},{"size":5067,"mtime":1661075336029,"results":"19","hashOfConfig":"15"},{"size":2553,"mtime":1661077231993,"results":"20","hashOfConfig":"15"},{"size":2065,"mtime":1661077072038,"results":"21","hashOfConfig":"15"},{"size":851,"mtime":1661075336030,"results":"22","hashOfConfig":"15"},{"size":1081,"mtime":1661075336031,"results":"23","hashOfConfig":"15"},{"size":3034,"mtime":1661075336031,"results":"24","hashOfConfig":"15"},{"size":3204,"mtime":1661075336031,"results":"25","hashOfConfig":"15"},{"size":1169,"mtime":1661075336032,"results":"26","hashOfConfig":"15"},{"size":814,"mtime":1661075336032,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"yrbooc",{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\MrLumus\\Documents\\GitHub\\ml-games-io-finally\\pages\\games\\[slug]\\[id].js",[],[],"C:\\Users\\MrLumus\\Documents\\GitHub\\ml-games-io-finally\\pages\\index.js",["70","71","72"],[],"import styled, { keyframes } from \"styled-components\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport SelectList from \"../components/gamesPage/SelectList/SelectList\";\r\nimport SelectListFilter from \"../components/gamesPage/SelectListFilter/SelectListFilter\";\r\nimport Container from \"../components/global/Container/Container\";\r\nimport SearchButton from \"../components/gamesPage/SearchButton/SearchButton\";\r\nimport GamesGrid from \"../components/gamesPage/GamesGrid/GamesGrid\";\r\nimport SearchInput from \"../components/gamesPage/SearchInput/SearchInput\";\r\nimport {\r\n  FETCH_ADDITIONAL_GAMES_DATA,\r\n  FETCH_GAMES_DATA,\r\n} from \"../redux/sagas/games-saga\";\r\nimport {\r\n  fetchGamesDataAC,\r\n  fetchPlatformsDataAC,\r\n  updateGameNameAC,\r\n} from \"../redux/actions\";\r\nimport Loader from \"../components/global/Loader/Loader\";\r\n\r\nconst size = {\r\n  mobileS: \"320px\",\r\n  mobileM: \"375px\",\r\n  mobileL: \"425px\",\r\n  tablet: \"768px\",\r\n  laptop: \"1024px\",\r\n  laptopL: \"1440px\",\r\n};\r\n\r\nconst GamesWrapper = styled.section`\r\n  min-width: 100vw;\r\n  height: 100vh;\r\n  max-height: 100vh;\r\n`;\r\nconst Wrapper = styled.div`\r\n  padding: 0px 10px;\r\n  height: 100%;\r\n  position: relative;\r\n`;\r\n\r\nconst Header = styled.h1`\r\n  color: #fff;\r\n  text-align: center;\r\n  padding: 20px 0;\r\n\r\n  @media screen and (min-width: ${size.mobileL}) {\r\n    font-size: 30px;\r\n  }\r\n  @media screen and (min-width: ${size.tablet}) {\r\n    font-size: 40px;\r\n  }\r\n  @media screen and (min-width: ${size.laptop}) {\r\n    font-size: 60px;\r\n  }\r\n`;\r\nconst ListWrapper = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  row-gap: 5px;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  padding-bottom: 20px;\r\n\r\n  @media screen and (min-width: ${size.laptop}) {\r\n    padding-bottom: 40px;\r\n  }\r\n`;\r\n\r\nconst Games = () => {\r\n  const [isSortDown, setSort] = useState(false);\r\n  const [order, setOrder] = useState(\"\");\r\n  const [platform, setPlatform] = useState(\"\");\r\n  const [pageNum, setPage] = useState(1);\r\n  const [fetching, setFetching] = useState(false);\r\n  const [seacrhStatus, setSearchStatus] = useState(false);\r\n\r\n  const toggleSort = () => setSort(!isSortDown);\r\n\r\n  const gamesState = useSelector((store) => store.gamesPage);\r\n  const isLoading = useSelector((store) => store.gamesPage.isLoading);\r\n  const searchText = useSelector((store) => store.gamesPage.gameNameText);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (!isLoading) {\r\n      let ordering = \"\";\r\n      let platforms = \"\";\r\n      let page = \"\";\r\n      let search = \"\";\r\n\r\n      if (order) {\r\n        switch (order) {\r\n          case \"1\":\r\n            ordering = isSortDown ? \"rating\" : \"-rating\";\r\n            break;\r\n          case \"2\":\r\n            ordering = isSortDown ? \"released\" : \"-released\";\r\n            break;\r\n        }\r\n      }\r\n\r\n      if (platform) platforms = platform;\r\n      if (pageNum) page = pageNum;\r\n      if (searchText) search = searchText;\r\n\r\n      dispatch({\r\n        type: FETCH_ADDITIONAL_GAMES_DATA,\r\n        payload: { ordering, platforms, page, search, setPage, setFetching },\r\n      });\r\n    }\r\n  }, [fetching]);\r\n\r\n  useEffect(() => {\r\n    setPage(1);\r\n    dispatch(fetchPlatformsDataAC());\r\n    dispatch(fetchGamesDataAC());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setPage(1);\r\n    let ordering = \"\";\r\n    let platforms = \"\";\r\n    let page = \"\";\r\n    let search = \"\";\r\n    if (order) {\r\n      switch (order) {\r\n        case \"1\":\r\n          ordering = isSortDown ? \"rating\" : \"-rating\";\r\n          break;\r\n        case \"2\":\r\n          ordering = isSortDown ? \"released\" : \"-released\";\r\n          break;\r\n      }\r\n    }\r\n\r\n    if (platform) platforms = platform;\r\n    if (pageNum) page = pageNum;\r\n    if (searchText) search = searchText;\r\n\r\n    dispatch({\r\n      type: FETCH_GAMES_DATA,\r\n      payload: { ordering, platforms, page, search },\r\n    });\r\n  }, [order, platform, isSortDown, seacrhStatus]);\r\n\r\n  const onGameNameTextChange = (text) => {\r\n    dispatch(updateGameNameAC(text));\r\n  };\r\n  const handelSearchClick = () => {\r\n    setSearchStatus(!seacrhStatus);\r\n  };\r\n\r\n  return (\r\n    <GamesWrapper>\r\n      <Container>\r\n        <Wrapper>\r\n          {isLoading ? <Loader position=\"absolute\"></Loader> : <></>}\r\n          <Header>ML-Games IO</Header>\r\n          <ListWrapper>\r\n            <SelectList\r\n              items={gamesState.sorts}\r\n              toggleSort={toggleSort}\r\n              setOrder={setOrder}\r\n            />\r\n            <SelectListFilter\r\n              items={gamesState.platforms}\r\n              setPlatform={setPlatform}\r\n            />\r\n            <SearchInput\r\n              gameNameText={gamesState.gameNameText}\r\n              onTextChange={onGameNameTextChange}\r\n            />\r\n            <SearchButton clickHandler={handelSearchClick}></SearchButton>\r\n          </ListWrapper>\r\n          <GamesGrid setFetching={setFetching} setPage={setPage}></GamesGrid>\r\n        </Wrapper>\r\n      </Container>\r\n    </GamesWrapper>\r\n  );\r\n};\r\n\r\nexport default Games;\r\n","C:\\Users\\MrLumus\\Documents\\GitHub\\ml-games-io-finally\\pages\\_app.js",[],[],"C:\\Users\\MrLumus\\Documents\\GitHub\\ml-games-io-finally\\components\\currentGamePage\\CurrentGame.jsx",["73"],[],"C:\\Users\\MrLumus\\Documents\\GitHub\\ml-games-io-finally\\components\\currentGamePage\\Slider.jsx",["74","75"],[],"import { initScriptLoader } from \"next/script\";\r\nimport { useEffect, useState, Children, cloneElement, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst size = {\r\n  mobileS: \"320px\",\r\n  mobileM: \"375px\",\r\n  mobileL: \"425px\",\r\n  tablet: \"768px\",\r\n  laptop: \"1024px\",\r\n  laptopL: \"1440px\",\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  border-radius: 15px;\r\n  margin: 0 auto;\r\n  max-width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n  position: relative;\r\n  @media screen and (min-width: ${size.laptop}) {\r\n    margin-bottom: 20px;\r\n  }\r\n`;\r\nconst SliderWrapper = styled.div`\r\n  max-width: 100%;\r\n  overflow: hidden;\r\n  height: auto;\r\n  border-radius: 15px;\r\n\r\n  @media screen and (min-width: ${size.tablet}) {\r\n    height: auto;\r\n  }\r\n`;\r\nconst SliderLine = styled.div`\r\n  display: flex;\r\n  max-width: 100%;\r\n  transition: all ease 1s;\r\n`;\r\nconst SliderButton = styled.div`\r\n  cursor: pointer;\r\n  position: absolute;\r\n  border: none;\r\n  outline: none;\r\n  width: 30px;\r\n  height: 30px;\r\n  border-radius: 50%;\r\n  background-color: rgba(100, 100, 100, 0.5);\r\n  z-index: 2;\r\n  transition: 0.2s;\r\n\r\n  @media screen and (min-width: ${size.laptop}) {\r\n    width: 70px;\r\n    height: 70px;\r\n  }\r\n  @media screen and (min-width: ${size.laptopL}) {\r\n    width: 100px;\r\n    height: 100px;\r\n  }\r\n\r\n  :hover {\r\n    background-color: rgba(100, 100, 100, 0.8);\r\n  }\r\n\r\n  ::before {\r\n    content: \"\";\r\n    width: 10px;\r\n    height: 10px;\r\n    border-left: 2px solid rgba(255, 255, 255, 0.5);\r\n    border-bottom: 2px solid rgba(255, 255, 255, 0.5);\r\n    border-bottom-left-radius: 3px;\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 50%;\r\n    transform: translate(-50%, -50%);\r\n\r\n    @media screen and (min-width: ${size.laptop}) {\r\n      width: 20px;\r\n      height: 20px;\r\n      border-left: 4px solid rgba(255, 255, 255, 0.5);\r\n      border-bottom: 4px solid rgba(255, 255, 255, 0.5);\r\n      border-bottom-left-radius: 7px;\r\n    }\r\n    @media screen and (min-width: ${size.laptopL}) {\r\n      width: 30px;\r\n      height: 30px;\r\n      border-left: 6px solid rgba(255, 255, 255, 0.5);\r\n      border-bottom: 6px solid rgba(255, 255, 255, 0.5);\r\n      border-bottom-left-radius: 10px;\r\n    }\r\n  }\r\n\r\n  :first-child {\r\n    margin-right: 5px;\r\n    left: 5px;\r\n    @media screen and (min-width: ${size.tablet}) {\r\n      left: 15px;\r\n    }\r\n    @media screen and (min-width: ${size.laptopL}) {\r\n      left: 25px;\r\n    }\r\n\r\n    ::before {\r\n      transform: translate(-40%, -50%) rotateZ(45deg);\r\n    }\r\n  }\r\n  :last-child {\r\n    margin-left: 5px;\r\n    right: 5px;\r\n    @media screen and (min-width: ${size.tablet}) {\r\n      right: 15px;\r\n    }\r\n    @media screen and (min-width: ${size.laptopL}) {\r\n      right: 25px;\r\n    }\r\n\r\n    ::before {\r\n      transform: translate(-60%, -50%) rotateZ(-135deg);\r\n    }\r\n  }\r\n`;\r\nconst Image = styled.img`\r\n  object-fit: cover;\r\n  min-height: 100%;\r\n  min-width: 100%;\r\n  max-width: 100%;\r\n\r\n  @media screen and (min-width: ${size.tablet}) {\r\n    height: 400px;\r\n  }\r\n  @media screen and (min-width: ${size.laptop}) {\r\n    height: 500px;\r\n  }\r\n  @media screen and (min-width: ${size.laptop}) {\r\n    height: 600px;\r\n  }\r\n`;\r\n\r\nconst Slider = ({ screenshots }) => {\r\n  const [images, setImages] = useState([]);\r\n  const [offset, setOffset] = useState(0);\r\n  const [width, setWidth] = useState(0);\r\n  const sliderRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    /*setImages(\r\n      Children.map(children, (child) => {\r\n        return cloneElement(child, {\r\n          style: {\r\n            minHeight: \"100%\",\r\n            minWidth: \"100%\",\r\n            maxWidth: \"100%\",\r\n          },\r\n        });\r\n      })\r\n    );*/\r\n\r\n    const resizeHandler = () => {\r\n      const _width = sliderRef.current.offsetWidth;\r\n      setWidth(_width);\r\n    };\r\n\r\n    window.addEventListener(\"resize\", resizeHandler);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", resizeHandler);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setWidth(sliderRef.current.offsetWidth);\r\n  }, [sliderRef.current]);\r\n\r\n  const handlerLeftArrowClick = () => {\r\n    setOffset((prev) => {\r\n      const newOffset = prev + width;\r\n      if (newOffset <= 0) return newOffset;\r\n      return prev;\r\n    });\r\n  };\r\n\r\n  const handlerRightArrowClick = () => {\r\n    setOffset((prev) => {\r\n      const newOffset = prev - width;\r\n      const maxOffset = width * (screenshots.length - 1) * -1;\r\n      if (newOffset >= maxOffset) return newOffset;\r\n      return prev;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Wrapper ref={sliderRef}>\r\n      <SliderButton onClick={handlerLeftArrowClick}></SliderButton>\r\n\r\n      <SliderWrapper>\r\n        <SliderLine\r\n          style={{\r\n            transform: `translateX(${offset}px)`,\r\n          }}\r\n        >\r\n          {}\r\n          {screenshots.map((screen) => {\r\n            return <Image key={screen.id} src={screen.image} />;\r\n          })}\r\n        </SliderLine>\r\n      </SliderWrapper>\r\n\r\n      <SliderButton onClick={handlerRightArrowClick}></SliderButton>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Slider;\r\n","C:\\Users\\MrLumus\\Documents\\GitHub\\ml-games-io-finally\\components\\gamesPage\\GamesGrid\\Game\\Game.jsx",[],[],"C:\\Users\\MrLumus\\Documents\\GitHub\\ml-games-io-finally\\components\\gamesPage\\GamesGrid\\GamesGrid.jsx",[],[],"C:\\Users\\MrLumus\\Documents\\GitHub\\ml-games-io-finally\\components\\gamesPage\\SearchButton\\SearchButton.jsx",[],[],"C:\\Users\\MrLumus\\Documents\\GitHub\\ml-games-io-finally\\components\\gamesPage\\SearchInput\\SearchInput.jsx",[],[],"C:\\Users\\MrLumus\\Documents\\GitHub\\ml-games-io-finally\\components\\gamesPage\\SelectList\\SelectList.jsx",[],[],"C:\\Users\\MrLumus\\Documents\\GitHub\\ml-games-io-finally\\components\\gamesPage\\SelectListFilter\\SelectListFilter.jsx",[],[],"C:\\Users\\MrLumus\\Documents\\GitHub\\ml-games-io-finally\\components\\global\\Container\\Container.jsx",["76"],[],"import { useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst size = {\r\n  mobileS: \"320px\",\r\n  mobileM: \"375px\",\r\n  mobileL: \"425px\",\r\n  tablet: \"768px\",\r\n  laptop: \"1024px\",\r\n  laptopL: \"1440px\",\r\n};\r\n\r\nconst StyledContainer = styled.div`\r\n  max-width: auto;\r\n  margin: 0 auto;\r\n\r\n  @media screen and (min-width: 321px) {\r\n    max-width: ${size.mobileS};\r\n  }\r\n  @media screen and (min-width: ${size.mobileM}) {\r\n    max-width: ${size.mobileM};\r\n  }\r\n  @media screen and (min-width: ${size.mobileL}) {\r\n    max-width: ${size.mobileL};\r\n  }\r\n  @media screen and (min-width: ${size.tablet}) {\r\n    max-width: ${size.tablet};\r\n  }\r\n  @media screen and (min-width: ${size.laptop}) {\r\n    max-width: ${size.laptop};\r\n  }\r\n  @media screen and (min-width: ${size.laptopL}) {\r\n    max-width: ${size.laptopL};\r\n  }\r\n`;\r\n\r\nconst Container = ({ children, setWidth }) => {\r\n  const containerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (setWidth) {\r\n      debugger;\r\n      setWidth(containerRef.current.offsetWidth);\r\n    }\r\n  }, []);\r\n\r\n  return <StyledContainer ref={containerRef}>{children}</StyledContainer>;\r\n};\r\n\r\nexport default Container;\r\n","C:\\Users\\MrLumus\\Documents\\GitHub\\ml-games-io-finally\\components\\global\\Loader\\Loader.jsx",[],[],{"ruleId":"77","severity":1,"message":"78","line":112,"column":6,"nodeType":"79","endLine":112,"endColumn":16,"suggestions":"80"},{"ruleId":"77","severity":1,"message":"81","line":118,"column":6,"nodeType":"79","endLine":118,"endColumn":8,"suggestions":"82"},{"ruleId":"77","severity":1,"message":"83","line":145,"column":6,"nodeType":"79","endLine":145,"endColumn":49,"suggestions":"84"},{"ruleId":"77","severity":1,"message":"85","line":268,"column":6,"nodeType":"79","endLine":268,"endColumn":10,"suggestions":"86"},{"ruleId":"77","severity":1,"message":"87","line":173,"column":6,"nodeType":"79","endLine":173,"endColumn":25,"suggestions":"88"},{"ruleId":"89","severity":1,"message":"90","line":204,"column":20,"nodeType":"91","endLine":204,"endColumn":64},{"ruleId":"77","severity":1,"message":"92","line":45,"column":6,"nodeType":"79","endLine":45,"endColumn":8,"suggestions":"93"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'isLoading', 'isSortDown', 'order', 'pageNum', 'platform', and 'searchText'. Either include them or remove the dependency array.","ArrayExpression",["94"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["95"],"React Hook useEffect has missing dependencies: 'dispatch', 'pageNum', and 'searchText'. Either include them or remove the dependency array.",["96"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["97"],"React Hook useEffect has an unnecessary dependency: 'sliderRef.current'. Either exclude it or remove the dependency array. Mutable values like 'sliderRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["98"],"jsx-a11y/alt-text","Image elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'setWidth'. Either include it or remove the dependency array. If 'setWidth' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["99"],{"desc":"100","fix":"101"},{"desc":"102","fix":"103"},{"desc":"104","fix":"105"},{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},{"desc":"110","fix":"111"},"Update the dependencies array to be: [dispatch, fetching, isLoading, isSortDown, order, pageNum, platform, searchText]",{"range":"112","text":"113"},"Update the dependencies array to be: [dispatch]",{"range":"114","text":"115"},"Update the dependencies array to be: [order, platform, isSortDown, seacrhStatus, pageNum, searchText, dispatch]",{"range":"116","text":"117"},"Update the dependencies array to be: [id, props]",{"range":"118","text":"119"},"Update the dependencies array to be: []",{"range":"120","text":"121"},"Update the dependencies array to be: [setWidth]",{"range":"122","text":"123"},[3145,3155],"[dispatch, fetching, isLoading, isSortDown, order, pageNum, platform, searchText]",[3278,3280],"[dispatch]",[3902,3945],"[order, platform, isSortDown, seacrhStatus, pageNum, searchText, dispatch]",[5751,5755],"[id, props]",[4029,4048],"[]",[1052,1054],"[setWidth]"]