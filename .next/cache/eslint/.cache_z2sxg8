[{"C:\\Users\\Admin\\Documents\\react\\ml-games-io-finally\\pages\\games\\[slug]\\[id].js":"1","C:\\Users\\Admin\\Documents\\react\\ml-games-io-finally\\pages\\index.js":"2","C:\\Users\\Admin\\Documents\\react\\ml-games-io-finally\\pages\\_app.js":"3","C:\\Users\\Admin\\Documents\\react\\ml-games-io-finally\\components\\currentGamePage\\CurrentGame.jsx":"4","C:\\Users\\Admin\\Documents\\react\\ml-games-io-finally\\components\\currentGamePage\\Slider.jsx":"5","C:\\Users\\Admin\\Documents\\react\\ml-games-io-finally\\components\\gamesPage\\GamesGrid\\Game\\Game.jsx":"6","C:\\Users\\Admin\\Documents\\react\\ml-games-io-finally\\components\\gamesPage\\GamesGrid\\GamesGrid.jsx":"7","C:\\Users\\Admin\\Documents\\react\\ml-games-io-finally\\components\\gamesPage\\SearchButton\\SearchButton.jsx":"8","C:\\Users\\Admin\\Documents\\react\\ml-games-io-finally\\components\\gamesPage\\SearchInput\\SearchInput.jsx":"9","C:\\Users\\Admin\\Documents\\react\\ml-games-io-finally\\components\\gamesPage\\SelectList\\SelectList.jsx":"10","C:\\Users\\Admin\\Documents\\react\\ml-games-io-finally\\components\\gamesPage\\SelectListFilter\\SelectListFilter.jsx":"11","C:\\Users\\Admin\\Documents\\react\\ml-games-io-finally\\components\\global\\Container\\Container.jsx":"12","C:\\Users\\Admin\\Documents\\react\\ml-games-io-finally\\components\\global\\Loader\\Loader.jsx":"13"},{"size":167,"mtime":1661019482693,"results":"14","hashOfConfig":"15"},{"size":5039,"mtime":1661049486576,"results":"16","hashOfConfig":"15"},{"size":1065,"mtime":1661016042713,"results":"17","hashOfConfig":"15"},{"size":8728,"mtime":1661049427573,"results":"18","hashOfConfig":"15"},{"size":5067,"mtime":1661042025085,"results":"19","hashOfConfig":"15"},{"size":2572,"mtime":1661015045940,"results":"20","hashOfConfig":"15"},{"size":2060,"mtime":1661048256808,"results":"21","hashOfConfig":"15"},{"size":851,"mtime":1661036144110,"results":"22","hashOfConfig":"15"},{"size":1081,"mtime":1661015045943,"results":"23","hashOfConfig":"15"},{"size":3034,"mtime":1661034498519,"results":"24","hashOfConfig":"15"},{"size":3204,"mtime":1661015045944,"results":"25","hashOfConfig":"15"},{"size":1169,"mtime":1661015045945,"results":"26","hashOfConfig":"15"},{"size":814,"mtime":1661049515235,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1g1sji0",{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Admin\\Documents\\react\\ml-games-io-finally\\pages\\games\\[slug]\\[id].js",[],[],"C:\\Users\\Admin\\Documents\\react\\ml-games-io-finally\\pages\\index.js",["69","70","71"],[],"C:\\Users\\Admin\\Documents\\react\\ml-games-io-finally\\pages\\_app.js",[],[],"C:\\Users\\Admin\\Documents\\react\\ml-games-io-finally\\components\\currentGamePage\\CurrentGame.jsx",["72"],[],"C:\\Users\\Admin\\Documents\\react\\ml-games-io-finally\\components\\currentGamePage\\Slider.jsx",["73","74"],[],"import { initScriptLoader } from \"next/script\";\r\nimport { useEffect, useState, Children, cloneElement, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst size = {\r\n  mobileS: \"320px\",\r\n  mobileM: \"375px\",\r\n  mobileL: \"425px\",\r\n  tablet: \"768px\",\r\n  laptop: \"1024px\",\r\n  laptopL: \"1440px\",\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  border-radius: 15px;\r\n  margin: 0 auto;\r\n  max-width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n  position: relative;\r\n  @media screen and (min-width: ${size.laptop}) {\r\n    margin-bottom: 20px;\r\n  }\r\n`;\r\nconst SliderWrapper = styled.div`\r\n  max-width: 100%;\r\n  overflow: hidden;\r\n  height: auto;\r\n  border-radius: 15px;\r\n\r\n  @media screen and (min-width: ${size.tablet}) {\r\n    height: auto;\r\n  }\r\n`;\r\nconst SliderLine = styled.div`\r\n  display: flex;\r\n  max-width: 100%;\r\n  transition: all ease 1s;\r\n`;\r\nconst SliderButton = styled.div`\r\n  cursor: pointer;\r\n  position: absolute;\r\n  border: none;\r\n  outline: none;\r\n  width: 30px;\r\n  height: 30px;\r\n  border-radius: 50%;\r\n  background-color: rgba(100, 100, 100, 0.5);\r\n  z-index: 2;\r\n  transition: 0.2s;\r\n\r\n  @media screen and (min-width: ${size.laptop}) {\r\n    width: 70px;\r\n    height: 70px;\r\n  }\r\n  @media screen and (min-width: ${size.laptopL}) {\r\n    width: 100px;\r\n    height: 100px;\r\n  }\r\n\r\n  :hover {\r\n    background-color: rgba(100, 100, 100, 0.8);\r\n  }\r\n\r\n  ::before {\r\n    content: \"\";\r\n    width: 10px;\r\n    height: 10px;\r\n    border-left: 2px solid rgba(255, 255, 255, 0.5);\r\n    border-bottom: 2px solid rgba(255, 255, 255, 0.5);\r\n    border-bottom-left-radius: 3px;\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 50%;\r\n    transform: translate(-50%, -50%);\r\n\r\n    @media screen and (min-width: ${size.laptop}) {\r\n      width: 20px;\r\n      height: 20px;\r\n      border-left: 4px solid rgba(255, 255, 255, 0.5);\r\n      border-bottom: 4px solid rgba(255, 255, 255, 0.5);\r\n      border-bottom-left-radius: 7px;\r\n    }\r\n    @media screen and (min-width: ${size.laptopL}) {\r\n      width: 30px;\r\n      height: 30px;\r\n      border-left: 6px solid rgba(255, 255, 255, 0.5);\r\n      border-bottom: 6px solid rgba(255, 255, 255, 0.5);\r\n      border-bottom-left-radius: 10px;\r\n    }\r\n  }\r\n\r\n  :first-child {\r\n    margin-right: 5px;\r\n    left: 5px;\r\n    @media screen and (min-width: ${size.tablet}) {\r\n      left: 15px;\r\n    }\r\n    @media screen and (min-width: ${size.laptopL}) {\r\n      left: 25px;\r\n    }\r\n\r\n    ::before {\r\n      transform: translate(-40%, -50%) rotateZ(45deg);\r\n    }\r\n  }\r\n  :last-child {\r\n    margin-left: 5px;\r\n    right: 5px;\r\n    @media screen and (min-width: ${size.tablet}) {\r\n      right: 15px;\r\n    }\r\n    @media screen and (min-width: ${size.laptopL}) {\r\n      right: 25px;\r\n    }\r\n\r\n    ::before {\r\n      transform: translate(-60%, -50%) rotateZ(-135deg);\r\n    }\r\n  }\r\n`;\r\nconst Image = styled.img`\r\n  object-fit: cover;\r\n  min-height: 100%;\r\n  min-width: 100%;\r\n  max-width: 100%;\r\n\r\n  @media screen and (min-width: ${size.tablet}) {\r\n    height: 400px;\r\n  }\r\n  @media screen and (min-width: ${size.laptop}) {\r\n    height: 500px;\r\n  }\r\n  @media screen and (min-width: ${size.laptop}) {\r\n    height: 600px;\r\n  }\r\n`;\r\n\r\nconst Slider = ({ screenshots }) => {\r\n  const [images, setImages] = useState([]);\r\n  const [offset, setOffset] = useState(0);\r\n  const [width, setWidth] = useState(0);\r\n  const sliderRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    /*setImages(\r\n      Children.map(children, (child) => {\r\n        return cloneElement(child, {\r\n          style: {\r\n            minHeight: \"100%\",\r\n            minWidth: \"100%\",\r\n            maxWidth: \"100%\",\r\n          },\r\n        });\r\n      })\r\n    );*/\r\n\r\n    const resizeHandler = () => {\r\n      const _width = sliderRef.current.offsetWidth;\r\n      setWidth(_width);\r\n    };\r\n\r\n    window.addEventListener(\"resize\", resizeHandler);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", resizeHandler);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setWidth(sliderRef.current.offsetWidth);\r\n  }, [sliderRef.current]);\r\n\r\n  const handlerLeftArrowClick = () => {\r\n    setOffset((prev) => {\r\n      const newOffset = prev + width;\r\n      if (newOffset <= 0) return newOffset;\r\n      return prev;\r\n    });\r\n  };\r\n\r\n  const handlerRightArrowClick = () => {\r\n    setOffset((prev) => {\r\n      const newOffset = prev - width;\r\n      const maxOffset = width * (screenshots.length - 1) * -1;\r\n      if (newOffset >= maxOffset) return newOffset;\r\n      return prev;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Wrapper ref={sliderRef}>\r\n      <SliderButton onClick={handlerLeftArrowClick}></SliderButton>\r\n\r\n      <SliderWrapper>\r\n        <SliderLine\r\n          style={{\r\n            transform: `translateX(${offset}px)`,\r\n          }}\r\n        >\r\n          {}\r\n          {screenshots.map((screen) => {\r\n            return <Image key={screen.id} src={screen.image} />;\r\n          })}\r\n        </SliderLine>\r\n      </SliderWrapper>\r\n\r\n      <SliderButton onClick={handlerRightArrowClick}></SliderButton>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Slider;\r\n","C:\\Users\\Admin\\Documents\\react\\ml-games-io-finally\\components\\gamesPage\\GamesGrid\\Game\\Game.jsx",[],[],"C:\\Users\\Admin\\Documents\\react\\ml-games-io-finally\\components\\gamesPage\\GamesGrid\\GamesGrid.jsx",[],[],"C:\\Users\\Admin\\Documents\\react\\ml-games-io-finally\\components\\gamesPage\\SearchButton\\SearchButton.jsx",[],[],"C:\\Users\\Admin\\Documents\\react\\ml-games-io-finally\\components\\gamesPage\\SearchInput\\SearchInput.jsx",[],[],"C:\\Users\\Admin\\Documents\\react\\ml-games-io-finally\\components\\gamesPage\\SelectList\\SelectList.jsx",[],[],"C:\\Users\\Admin\\Documents\\react\\ml-games-io-finally\\components\\gamesPage\\SelectListFilter\\SelectListFilter.jsx",[],[],"C:\\Users\\Admin\\Documents\\react\\ml-games-io-finally\\components\\global\\Container\\Container.jsx",["75"],[],"import { useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst size = {\r\n  mobileS: \"320px\",\r\n  mobileM: \"375px\",\r\n  mobileL: \"425px\",\r\n  tablet: \"768px\",\r\n  laptop: \"1024px\",\r\n  laptopL: \"1440px\",\r\n};\r\n\r\nconst StyledContainer = styled.div`\r\n  max-width: auto;\r\n  margin: 0 auto;\r\n\r\n  @media screen and (min-width: 321px) {\r\n    max-width: ${size.mobileS};\r\n  }\r\n  @media screen and (min-width: ${size.mobileM}) {\r\n    max-width: ${size.mobileM};\r\n  }\r\n  @media screen and (min-width: ${size.mobileL}) {\r\n    max-width: ${size.mobileL};\r\n  }\r\n  @media screen and (min-width: ${size.tablet}) {\r\n    max-width: ${size.tablet};\r\n  }\r\n  @media screen and (min-width: ${size.laptop}) {\r\n    max-width: ${size.laptop};\r\n  }\r\n  @media screen and (min-width: ${size.laptopL}) {\r\n    max-width: ${size.laptopL};\r\n  }\r\n`;\r\n\r\nconst Container = ({ children, setWidth }) => {\r\n  const containerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (setWidth) {\r\n      debugger;\r\n      setWidth(containerRef.current.offsetWidth);\r\n    }\r\n  }, []);\r\n\r\n  return <StyledContainer ref={containerRef}>{children}</StyledContainer>;\r\n};\r\n\r\nexport default Container;\r\n","C:\\Users\\Admin\\Documents\\react\\ml-games-io-finally\\components\\global\\Loader\\Loader.jsx",[],[],{"ruleId":"76","severity":1,"message":"77","line":112,"column":6,"nodeType":"78","endLine":112,"endColumn":16,"suggestions":"79"},{"ruleId":"76","severity":1,"message":"80","line":118,"column":6,"nodeType":"78","endLine":118,"endColumn":8,"suggestions":"81"},{"ruleId":"76","severity":1,"message":"82","line":145,"column":6,"nodeType":"78","endLine":145,"endColumn":49,"suggestions":"83"},{"ruleId":"76","severity":1,"message":"84","line":259,"column":6,"nodeType":"78","endLine":259,"endColumn":10,"suggestions":"85"},{"ruleId":"76","severity":1,"message":"86","line":173,"column":6,"nodeType":"78","endLine":173,"endColumn":25,"suggestions":"87"},{"ruleId":"88","severity":1,"message":"89","line":204,"column":20,"nodeType":"90","endLine":204,"endColumn":64},{"ruleId":"76","severity":1,"message":"91","line":45,"column":6,"nodeType":"78","endLine":45,"endColumn":8,"suggestions":"92"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'isLoading', 'isSortDown', 'order', 'pageNum', 'platform', and 'searchText'. Either include them or remove the dependency array.","ArrayExpression",["93"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["94"],"React Hook useEffect has missing dependencies: 'dispatch', 'pageNum', and 'searchText'. Either include them or remove the dependency array.",["95"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["96"],"React Hook useEffect has an unnecessary dependency: 'sliderRef.current'. Either exclude it or remove the dependency array. Mutable values like 'sliderRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["97"],"jsx-a11y/alt-text","Image elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'setWidth'. Either include it or remove the dependency array. If 'setWidth' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["98"],{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},{"desc":"103","fix":"104"},{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},{"desc":"109","fix":"110"},"Update the dependencies array to be: [dispatch, fetching, isLoading, isSortDown, order, pageNum, platform, searchText]",{"range":"111","text":"112"},"Update the dependencies array to be: [dispatch]",{"range":"113","text":"114"},"Update the dependencies array to be: [order, platform, isSortDown, seacrhStatus, pageNum, searchText, dispatch]",{"range":"115","text":"116"},"Update the dependencies array to be: [id, props]",{"range":"117","text":"118"},"Update the dependencies array to be: []",{"range":"119","text":"120"},"Update the dependencies array to be: [setWidth]",{"range":"121","text":"122"},[3145,3155],"[dispatch, fetching, isLoading, isSortDown, order, pageNum, platform, searchText]",[3278,3280],"[dispatch]",[3902,3945],"[order, platform, isSortDown, seacrhStatus, pageNum, searchText, dispatch]",[5552,5556],"[id, props]",[4029,4048],"[]",[1052,1054],"[setWidth]"]