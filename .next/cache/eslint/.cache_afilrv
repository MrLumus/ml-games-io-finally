[{"C:\\Users\\Admin\\Documents\\GitHub\\ml-games-io-ejected\\pages\\games\\[slug]\\[id].js":"1","C:\\Users\\Admin\\Documents\\GitHub\\ml-games-io-ejected\\pages\\index.js":"2","C:\\Users\\Admin\\Documents\\GitHub\\ml-games-io-ejected\\pages\\_app.js":"3","C:\\Users\\Admin\\Documents\\GitHub\\ml-games-io-ejected\\components\\currentGamePage\\CurrentGame.jsx":"4","C:\\Users\\Admin\\Documents\\GitHub\\ml-games-io-ejected\\components\\currentGamePage\\Slider.jsx":"5","C:\\Users\\Admin\\Documents\\GitHub\\ml-games-io-ejected\\components\\gamesPage\\GamesGrid\\Game\\Game.jsx":"6","C:\\Users\\Admin\\Documents\\GitHub\\ml-games-io-ejected\\components\\gamesPage\\GamesGrid\\GamesGrid.jsx":"7","C:\\Users\\Admin\\Documents\\GitHub\\ml-games-io-ejected\\components\\gamesPage\\SearchButton\\SearchButton.jsx":"8","C:\\Users\\Admin\\Documents\\GitHub\\ml-games-io-ejected\\components\\gamesPage\\SearchInput\\SearchInput.jsx":"9","C:\\Users\\Admin\\Documents\\GitHub\\ml-games-io-ejected\\components\\gamesPage\\SelectList\\SelectList.jsx":"10","C:\\Users\\Admin\\Documents\\GitHub\\ml-games-io-ejected\\components\\gamesPage\\SelectListFilter\\SelectListFilter.jsx":"11","C:\\Users\\Admin\\Documents\\GitHub\\ml-games-io-ejected\\components\\global\\Container\\Container.jsx":"12"},{"size":167,"mtime":1661019482693,"results":"13","hashOfConfig":"14"},{"size":4849,"mtime":1661033440388,"results":"15","hashOfConfig":"14"},{"size":1065,"mtime":1661016042713,"results":"16","hashOfConfig":"14"},{"size":3946,"mtime":1661024465666,"results":"17","hashOfConfig":"14"},{"size":5143,"mtime":1661024209556,"results":"18","hashOfConfig":"14"},{"size":2572,"mtime":1661015045940,"results":"19","hashOfConfig":"14"},{"size":2000,"mtime":1661015045941,"results":"20","hashOfConfig":"14"},{"size":887,"mtime":1661015045942,"results":"21","hashOfConfig":"14"},{"size":1081,"mtime":1661015045943,"results":"22","hashOfConfig":"14"},{"size":3089,"mtime":1661015045943,"results":"23","hashOfConfig":"14"},{"size":3204,"mtime":1661015045944,"results":"24","hashOfConfig":"14"},{"size":1169,"mtime":1661015045945,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1uneeum",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},"C:\\Users\\Admin\\Documents\\GitHub\\ml-games-io-ejected\\pages\\games\\[slug]\\[id].js",[],[],"C:\\Users\\Admin\\Documents\\GitHub\\ml-games-io-ejected\\pages\\index.js",["65","66","67"],[],"C:\\Users\\Admin\\Documents\\GitHub\\ml-games-io-ejected\\pages\\_app.js",[],[],"C:\\Users\\Admin\\Documents\\GitHub\\ml-games-io-ejected\\components\\currentGamePage\\CurrentGame.jsx",["68"],[],"import { useRouter } from \"next/router\";\r\nimport { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport Slider from \"./Slider\";\r\nimport Container from \"./../global/Container/Container\";\r\nimport {\r\n  fetchCurrentGameDataAC,\r\n  fetchLinksDataAC,\r\n  fetchScreenshotsDataAC,\r\n} from \"../../redux/actions\";\r\n\r\nconst size = {\r\n  mobileS: \"320px\",\r\n  mobileM: \"375px\",\r\n  mobileL: \"425px\",\r\n  tablet: \"768px\",\r\n  laptop: \"1024px\",\r\n  laptopL: \"1440px\",\r\n};\r\n\r\nconst GameWrapper = styled.div`\r\n  height: 100%;\r\n`;\r\nconst GameContainer = styled.div`\r\n  padding: 0 5px;\r\n  height: 100%;\r\n`;\r\n\r\nconst Header = styled.h1`\r\n  font-size: 25px;\r\n  font-weight: 600;\r\n  text-align: center;\r\n  color: #fff;\r\n  padding: 10px 0;\r\n\r\n  @media screen and (min-width: ${size.tablet}) {\r\n    font-size: 40px;\r\n    padding: 20px 0;\r\n  }\r\n  @media screen and (min-width: ${size.laptop}) {\r\n    font-size: 55px;\r\n    padding: 30px 0;\r\n  }\r\n  @media screen and (min-width: ${size.laptopL}) {\r\n    font-size: 75px;\r\n    padding: 30px 0;\r\n  }\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  text-align: center;\r\n  font-size: 15px;\r\n  color: #fff;\r\n  margin-bottom: 5px;\r\n\r\n  @media screen and (min-width: ${size.tablet}) {\r\n    font-size: 25px;\r\n  }\r\n  @media screen and (min-width: ${size.laptop}) {\r\n    font-size: 35px;\r\n    text-align: left;\r\n    margin-bottom: 15px;\r\n  }\r\n  @media screen and (min-width: ${size.laptopL}) {\r\n    font-size: 55px;\r\n  }\r\n`;\r\n\r\nconst Subtitle = styled.h3`\r\n  font-size: 13px;\r\n  color: #777;\r\n  margin-bottom: 5px;\r\n  text-align: center;\r\n\r\n  @media screen and (min-width: ${size.tablet}) {\r\n    font-size: 20px;\r\n  }\r\n  @media screen and (min-width: ${size.laptop}) {\r\n    font-size: 30px;\r\n    text-align: left;\r\n    margin-bottom: 10px;\r\n  }\r\n  @media screen and (min-width: ${size.laptopL}) {\r\n    font-size: 45px;\r\n  }\r\n`;\r\n\r\nconst Description = styled.p`\r\n  font-size: 13px;\r\n  color: #ddd;\r\n  margin-bottom: 10px;\r\n  text-align: center;\r\n\r\n  @media screen and (min-width: ${size.tablet}) {\r\n    font-size: 20px;\r\n  }\r\n  @media screen and (min-width: ${size.laptop}) {\r\n    font-size: 25px;\r\n    text-align: left;\r\n    margin-bottom: 25px;\r\n  }\r\n  @media screen and (min-width: ${size.laptopL}) {\r\n    font-size: 35px;\r\n  }\r\n`;\r\n\r\nconst StoreLink = styled.a`\r\n  color: #fff;\r\n  display: block;\r\n  :not(:last-child) {\r\n    margin-bottom: 5px;\r\n  }\r\n`;\r\n\r\nconst CurrentGame = (props) => {\r\n  const router = useRouter();\r\n\r\n  let counter = 1;\r\n  const { id } = router.query;\r\n\r\n  useEffect(() => {\r\n    props.fecthCurrentGameData(id);\r\n    props.fetchLinksData(id);\r\n    props.fetchScreenshotsData(id);\r\n  }, [id]);\r\n\r\n  return (\r\n    <GameWrapper>\r\n      <Container>\r\n        <GameContainer>\r\n          <Header>{props.currentGame.name}</Header>\r\n          <Slider screenshots={props.screenshots} />\r\n          <Title>About</Title>\r\n          <Description>{props.currentGame.description_raw}</Description>\r\n          <Subtitle>Web Sites:</Subtitle>\r\n          <Description>\r\n            {props.links.map((link) => {\r\n              return (\r\n                <StoreLink\r\n                  key={link.id}\r\n                  href={link.url}\r\n                >{`Link â„– ${counter++}`}</StoreLink>\r\n              );\r\n            })}\r\n          </Description>\r\n        </GameContainer>\r\n      </Container>\r\n    </GameWrapper>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    currentGame: state.currentGamePage.currentGame,\r\n    links: state.currentGamePage.links,\r\n    screenshots: state.currentGamePage.screenshots,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fecthCurrentGameData: (id) => dispatch(fetchCurrentGameDataAC(id)),\r\n    fetchLinksData: (id) => dispatch(fetchLinksDataAC(id)),\r\n    fetchScreenshotsData: (id) => dispatch(fetchScreenshotsDataAC(id)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CurrentGame);\r\n","C:\\Users\\Admin\\Documents\\GitHub\\ml-games-io-ejected\\components\\currentGamePage\\Slider.jsx",["69","70"],[],"import { initScriptLoader } from \"next/script\";\r\nimport { useEffect, useState, Children, cloneElement, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst size = {\r\n  mobileS: \"320px\",\r\n  mobileM: \"375px\",\r\n  mobileL: \"425px\",\r\n  tablet: \"768px\",\r\n  laptop: \"1024px\",\r\n  laptopL: \"1440px\",\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  border-radius: 15px;\r\n  margin: 0 auto;\r\n  max-width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n  position: relative;\r\n  @media screen and (min-width: ${size.laptop}) {\r\n    margin-bottom: 20px;\r\n  }\r\n`;\r\nconst SliderWrapper = styled.div`\r\n  max-width: 100%;\r\n  overflow: hidden;\r\n  height: 200px;\r\n  border-radius: 15px;\r\n\r\n  @media screen and (min-width: ${size.tablet}) {\r\n    height: auto;\r\n  }\r\n  @media screen and (min-width: ${size.laptop}) {\r\n    height: auto;\r\n  }\r\n  @media screen and (min-width: ${size.laptopL}) {\r\n    height: auto;\r\n  }\r\n`;\r\nconst SliderLine = styled.div`\r\n  display: flex;\r\n  max-width: 100%;\r\n  transition: all ease 1s;\r\n`;\r\nconst SliderButton = styled.div`\r\n  cursor: pointer;\r\n  position: absolute;\r\n  border: none;\r\n  outline: none;\r\n  width: 30px;\r\n  height: 30px;\r\n  border-radius: 50%;\r\n  background-color: rgba(100, 100, 100, 0.5);\r\n  z-index: 2;\r\n  transition: 0.2s;\r\n\r\n  @media screen and (min-width: ${size.laptop}) {\r\n    width: 70px;\r\n    height: 70px;\r\n  }\r\n  @media screen and (min-width: ${size.laptopL}) {\r\n    width: 100px;\r\n    height: 100px;\r\n  }\r\n\r\n  :hover {\r\n    background-color: rgba(100, 100, 100, 0.8);\r\n  }\r\n\r\n  ::before {\r\n    content: \"\";\r\n    width: 10px;\r\n    height: 10px;\r\n    border-left: 2px solid rgba(255, 255, 255, 0.5);\r\n    border-bottom: 2px solid rgba(255, 255, 255, 0.5);\r\n    border-bottom-left-radius: 3px;\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 50%;\r\n    transform: translate(-50%, -50%);\r\n\r\n    @media screen and (min-width: ${size.laptop}) {\r\n      width: 20px;\r\n      height: 20px;\r\n      border-left: 4px solid rgba(255, 255, 255, 0.5);\r\n      border-bottom: 4px solid rgba(255, 255, 255, 0.5);\r\n      border-bottom-left-radius: 7px;\r\n    }\r\n    @media screen and (min-width: ${size.laptopL}) {\r\n      width: 30px;\r\n      height: 30px;\r\n      border-left: 6px solid rgba(255, 255, 255, 0.5);\r\n      border-bottom: 6px solid rgba(255, 255, 255, 0.5);\r\n      border-bottom-left-radius: 10px;\r\n    }\r\n  }\r\n\r\n  :first-child {\r\n    margin-right: 5px;\r\n    left: 5px;\r\n    @media screen and (min-width: ${size.tablet}) {\r\n      left: 15px;\r\n    }\r\n    @media screen and (min-width: ${size.laptopL}) {\r\n      left: 25px;\r\n    }\r\n\r\n    ::before {\r\n      transform: translate(-40%, -50%) rotateZ(45deg);\r\n    }\r\n  }\r\n  :last-child {\r\n    margin-left: 5px;\r\n    right: 5px;\r\n    @media screen and (min-width: ${size.tablet}) {\r\n      right: 15px;\r\n    }\r\n    @media screen and (min-width: ${size.laptopL}) {\r\n      right: 25px;\r\n    }\r\n\r\n    ::before {\r\n      transform: translate(-60%, -50%) rotateZ(-135deg);\r\n    }\r\n  }\r\n`;\r\nconst Image = styled.img`\r\n  object-fit: cover;\r\n  min-height: 100%;\r\n  min-width: 100%;\r\n  max-width: 100%;\r\n\r\n  @media screen and (min-width: ${size.tablet}) {\r\n    height: 400px;\r\n  }\r\n  @media screen and (min-width: ${size.laptop}) {\r\n    height: 500px;\r\n  }\r\n`;\r\n\r\nconst Slider = ({ screenshots }) => {\r\n  const [images, setImages] = useState([]);\r\n  const [offset, setOffset] = useState(0);\r\n  const [width, setWidth] = useState(0);\r\n  const sliderRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    /*setImages(\r\n      Children.map(children, (child) => {\r\n        return cloneElement(child, {\r\n          style: {\r\n            minHeight: \"100%\",\r\n            minWidth: \"100%\",\r\n            maxWidth: \"100%\",\r\n          },\r\n        });\r\n      })\r\n    );*/\r\n\r\n    const resizeHandler = () => {\r\n      const _width = sliderRef.current.offsetWidth;\r\n      setWidth(_width);\r\n    };\r\n\r\n    window.addEventListener(\"resize\", resizeHandler);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", resizeHandler);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setWidth(sliderRef.current.offsetWidth);\r\n  }, [sliderRef.current]);\r\n\r\n  const handlerLeftArrowClick = () => {\r\n    setOffset((prev) => {\r\n      const newOffset = prev + width;\r\n      if (newOffset <= 0) return newOffset;\r\n      return prev;\r\n    });\r\n  };\r\n\r\n  const handlerRightArrowClick = () => {\r\n    setOffset((prev) => {\r\n      const newOffset = prev - width;\r\n      const maxOffset = width * (screenshots.length - 1) * -1;\r\n      if (newOffset >= maxOffset) return newOffset;\r\n      return prev;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Wrapper ref={sliderRef}>\r\n      <SliderButton onClick={handlerLeftArrowClick}></SliderButton>\r\n\r\n      <SliderWrapper>\r\n        <SliderLine\r\n          style={{\r\n            transform: `translateX(${offset}px)`,\r\n          }}\r\n        >\r\n          {}\r\n          {screenshots.map((screen) => {\r\n            return <Image key={screen.id} src={screen.image} />;\r\n          })}\r\n        </SliderLine>\r\n      </SliderWrapper>\r\n\r\n      <SliderButton onClick={handlerRightArrowClick}></SliderButton>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Slider;\r\n","C:\\Users\\Admin\\Documents\\GitHub\\ml-games-io-ejected\\components\\gamesPage\\GamesGrid\\Game\\Game.jsx",[],[],"C:\\Users\\Admin\\Documents\\GitHub\\ml-games-io-ejected\\components\\gamesPage\\GamesGrid\\GamesGrid.jsx",[],[],"C:\\Users\\Admin\\Documents\\GitHub\\ml-games-io-ejected\\components\\gamesPage\\SearchButton\\SearchButton.jsx",[],[],"C:\\Users\\Admin\\Documents\\GitHub\\ml-games-io-ejected\\components\\gamesPage\\SearchInput\\SearchInput.jsx",[],[],"C:\\Users\\Admin\\Documents\\GitHub\\ml-games-io-ejected\\components\\gamesPage\\SelectList\\SelectList.jsx",[],[],"C:\\Users\\Admin\\Documents\\GitHub\\ml-games-io-ejected\\components\\gamesPage\\SelectListFilter\\SelectListFilter.jsx",[],[],"C:\\Users\\Admin\\Documents\\GitHub\\ml-games-io-ejected\\components\\global\\Container\\Container.jsx",["71"],[],"import { useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst size = {\r\n  mobileS: \"320px\",\r\n  mobileM: \"375px\",\r\n  mobileL: \"425px\",\r\n  tablet: \"768px\",\r\n  laptop: \"1024px\",\r\n  laptopL: \"1440px\",\r\n};\r\n\r\nconst StyledContainer = styled.div`\r\n  max-width: auto;\r\n  margin: 0 auto;\r\n\r\n  @media screen and (min-width: 321px) {\r\n    max-width: ${size.mobileS};\r\n  }\r\n  @media screen and (min-width: ${size.mobileM}) {\r\n    max-width: ${size.mobileM};\r\n  }\r\n  @media screen and (min-width: ${size.mobileL}) {\r\n    max-width: ${size.mobileL};\r\n  }\r\n  @media screen and (min-width: ${size.tablet}) {\r\n    max-width: ${size.tablet};\r\n  }\r\n  @media screen and (min-width: ${size.laptop}) {\r\n    max-width: ${size.laptop};\r\n  }\r\n  @media screen and (min-width: ${size.laptopL}) {\r\n    max-width: ${size.laptopL};\r\n  }\r\n`;\r\n\r\nconst Container = ({ children, setWidth }) => {\r\n  const containerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (setWidth) {\r\n      debugger;\r\n      setWidth(containerRef.current.offsetWidth);\r\n    }\r\n  }, []);\r\n\r\n  return <StyledContainer ref={containerRef}>{children}</StyledContainer>;\r\n};\r\n\r\nexport default Container;\r\n",{"ruleId":"72","severity":1,"message":"73","line":105,"column":6,"nodeType":"74","endLine":105,"endColumn":16,"suggestions":"75"},{"ruleId":"72","severity":1,"message":"76","line":117,"column":6,"nodeType":"74","endLine":117,"endColumn":8,"suggestions":"77"},{"ruleId":"72","severity":1,"message":"78","line":144,"column":6,"nodeType":"74","endLine":144,"endColumn":47,"suggestions":"79"},{"ruleId":"72","severity":1,"message":"80","line":126,"column":6,"nodeType":"74","endLine":126,"endColumn":10,"suggestions":"81"},{"ruleId":"72","severity":1,"message":"82","line":176,"column":6,"nodeType":"74","endLine":176,"endColumn":25,"suggestions":"83"},{"ruleId":"84","severity":1,"message":"85","line":207,"column":20,"nodeType":"86","endLine":207,"endColumn":64},{"ruleId":"72","severity":1,"message":"87","line":45,"column":6,"nodeType":"74","endLine":45,"endColumn":8,"suggestions":"88"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'isLoading', 'isSortDown', 'order', 'pageNum', 'platform', and 'searchText'. Either include them or remove the dependency array.","ArrayExpression",["89"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["90"],"React Hook useEffect has missing dependencies: 'dispatch' and 'pageNum'. Either include them or remove the dependency array.",["91"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["92"],"React Hook useEffect has an unnecessary dependency: 'sliderRef.current'. Either exclude it or remove the dependency array. Mutable values like 'sliderRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["93"],"jsx-a11y/alt-text","Image elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'setWidth'. Either include it or remove the dependency array. If 'setWidth' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["94"],{"desc":"95","fix":"96"},{"desc":"97","fix":"98"},{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},{"desc":"103","fix":"104"},{"desc":"105","fix":"106"},"Update the dependencies array to be: [dispatch, fetching, isLoading, isSortDown, order, pageNum, platform, searchText]",{"range":"107","text":"108"},"Update the dependencies array to be: [dispatch]",{"range":"109","text":"110"},"Update the dependencies array to be: [order, platform, isSortDown, searchText, pageNum, dispatch]",{"range":"111","text":"112"},"Update the dependencies array to be: [id, props]",{"range":"113","text":"114"},"Update the dependencies array to be: []",{"range":"115","text":"116"},"Update the dependencies array to be: [setWidth]",{"range":"117","text":"118"},[2938,2948],"[dispatch, fetching, isLoading, isSortDown, order, pageNum, platform, searchText]",[3153,3155],"[dispatch]",[3777,3818],"[order, platform, isSortDown, searchText, pageNum, dispatch]",[2666,2670],"[id, props]",[4105,4124],"[]",[1052,1054],"[setWidth]"]